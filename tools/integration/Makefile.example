# Example Makefile integration for Cler validator
#
# Add these targets to your existing Makefile

# Python interpreter
PYTHON ?= python3

# Validator location
CLER_VALIDATOR = tools/linter/cler-validate.py

# Source directories
SRC_DIRS = src desktop_examples examples

# Find all C++ files
CPP_FILES = $(shell find $(SRC_DIRS) -name "*.cpp" -o -name "*.hpp" -o -name "*.h" 2>/dev/null)

# Validation target
.PHONY: validate
validate:
	@echo "Running Cler flowgraph validation..."
	@$(PYTHON) $(CLER_VALIDATOR) $(CPP_FILES) || exit 1

# Validation with custom rules
.PHONY: validate-custom
validate-custom:
	@echo "Running Cler validation with custom rules..."
	@$(PYTHON) $(CLER_VALIDATOR) --config tools/linter/custom-rules.yaml $(CPP_FILES)

# Validation with JSON output (for CI/CD)
.PHONY: validate-json
validate-json:
	@$(PYTHON) $(CLER_VALIDATOR) --json $(CPP_FILES) > validation-report.json

# Quick validation (errors only, no warnings)
.PHONY: validate-errors
validate-errors:
	@$(PYTHON) $(CLER_VALIDATOR) --quiet $(CPP_FILES) | grep -E "ERROR:" || echo "No errors found!"

# Install pre-commit hook
.PHONY: install-hooks
install-hooks:
	@echo "Installing git hooks..."
	@cp tools/integration/pre-commit-hook.sh .git/hooks/pre-commit
	@chmod +x .git/hooks/pre-commit
	@echo "Pre-commit hook installed!"

# Add validation to your build process
.PHONY: build
build: validate
	@echo "Building project..."
	# Your normal build commands here
	mkdir -p build
	cd build && cmake .. && make

# Clean target
.PHONY: clean
clean:
	rm -f validation-report.json
	rm -rf build/

# Help target
.PHONY: help
help:
	@echo "Cler Validation Targets:"
	@echo "  validate          - Run flowgraph validation on all C++ files"
	@echo "  validate-custom   - Run validation with custom rules"
	@echo "  validate-json     - Generate JSON validation report"
	@echo "  validate-errors   - Show only errors (no warnings)"
	@echo "  install-hooks     - Install git pre-commit hook"
	@echo ""
	@echo "Build Targets:"
	@echo "  build            - Validate and build the project"
	@echo "  clean            - Clean build artifacts"