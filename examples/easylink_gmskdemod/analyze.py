#!/usr/bin/env python3

import numpy as np
import matplotlib.pyplot as plt
import os

# --------------------------STREAM DATA-----------------------------------
outputdir = os.path.join(os.path.dirname(__file__), "output")
data = np.fromfile(os.path.join(outputdir,"post_decim_output.bin"), dtype=np.complex64)
preamble_detections = np.fromfile(os.path.join(outputdir,"preamble_detections.bin"), dtype=np.uint32)
phase = np.angle(data)
phase[np.abs(data) < 0.05] = 0


# Plot time domain
fig, axes = plt.subplots(2,1)
ax = axes[0]
ax.plot(phase, label='phase')
for detection in preamble_detections:
    detection = detection - 24*2  # Adjust for preamble length
    ax.axvline(x=detection, color='r', linestyle='--')
ax.legend()
ax.set_title('Magnitude of Samples')
ax.set_ylabel('Magnitude')
ax.set_xlabel('Sample Index')


preamble_theirs = np.array([
 [ 0.37436679 + 0.92728072*1j],
 [-0.36526394 + 0.93090397*1j],
 [-0.81730068 + 0.57621139*1j],
 [-0.81729931 + 0.57621336*1j],
 [-0.36501178 + 0.93100291*1j],
 [ 0.38318372 + 0.92367214*1j],
 [ 0.92388129 + 0.38267913*1j],
 [ 0.92388129 + 0.38267913*1j],
 [ 0.38318360 + 0.92367220*1j],
 [-0.36501622 + 0.93100113*1j],
 [-0.81761116 + 0.57577074*1j],
 [-0.82812917 + 0.56053734*1j],
 [-0.56053716 + 0.82812929*1j],
 [-0.57576686 + 0.81761390*1j],
 [-0.93080336 + 0.36552027*1j],
 [-0.93080336 + 0.36552027*1j],
 [-0.57576686 + 0.81761390*1j],
 [-0.56053716 + 0.82812929*1j],
 [-0.82812917 + 0.56053734*1j],
 [-0.81761116 + 0.57577074*1j],
 [-0.36501613 + 0.93100119*1j],
 [ 0.38317943 + 0.92367393*1j],
 [ 0.92367399 + 0.38317931*1j],
 [ 0.93100286 + 0.36501193*1j],
 [ 0.57621324 + 0.81729937*1j],
 [ 0.57620943 + 0.81730211*1j],
 [ 0.93080503 + 0.36551607*1j],
 [ 0.93080342 + 0.36552018*1j],
 [ 0.57576698 + 0.81761384*1j],
 [ 0.56053740 + 0.82812911*1j],
 [ 0.82812935 + 0.56053704*1j],
 [ 0.81761402 + 0.57576668*1j],
 [ 0.36552042 + 0.93080330*1j],
 [-0.36551583 + 0.93080515*1j],
 [-0.81730193 + 0.57620966*1j],
 [-0.81730193 + 0.57620966*1j],
 [-0.36551583 + 0.93080515*1j],
 [ 0.36552042 + 0.93080330*1j],
 [ 0.81761396 + 0.57576680*1j],
 [ 0.82812667 + 0.56054103*1j],
 [ 0.56008875 + 0.82843262*1j],
 [ 0.56008875 + 0.82843262*1j],
 [ 0.82812667 + 0.56054103*1j],
 [ 0.81761396 + 0.57576680*1j],
 [ 0.36552042 + 0.93080330*1j],
 [-0.36552015 + 0.93080342*1j],
 [-0.81761378 + 0.57576704*1j],
 [-0.82812649 + 0.56054127*1j]])

preamble_mine = np.array([

  [0.56795543  + -0.82305932*1j],
  [0.56031680  + -0.82827836*1j],
  [0.82843137  + -0.56009060*1j],
  [0.82843006  + -0.56009257*1j],
  [0.56009257  + -0.82843006*1j],
  [0.56009257  + -0.82843006*1j],
  [0.82843006  + -0.56009257*1j],
  [0.82843006  + -0.56009257*1j],
  [0.56009257  + -0.82843006*1j],
  [0.56009257  + -0.82843006*1j],
  [0.82843006  + -0.56009257*1j],
  [0.82843006  + -0.56009257*1j],
  [0.56009257  + -0.82843006*1j],
  [0.56009257  + -0.82843006*1j],
  [0.82843006  + -0.56009257*1j],
  [0.82843006  + -0.56009257*1j],
  [0.56009257  + -0.82843006*1j],
  [0.56009257  + -0.82843006*1j],
  [0.82843006  + -0.56009257*1j],
  [0.82843006  + -0.56009257*1j],
  [0.56009257  + -0.82843006*1j],
  [0.56009257  + -0.82843006*1j],
  [0.82843006  + -0.56009257*1j],
  [0.82843006  + -0.56009257*1j],
  [0.56009257  + -0.82843006*1j],
  [0.56009257  + -0.82843006*1j],
  [0.82843006  + -0.56009257*1j],
  [0.82843006  + -0.56009257*1j],
  [0.56009257  + -0.82843006*1j],
  [0.56009257  + -0.82843006*1j],
  [0.82843006  + -0.56009257*1j],
  [0.82843006  + -0.56009257*1j],
  [0.56009257  + -0.82843006*1j],
  [0.56009257  + -0.82843006*1j],
  [0.82843006  + -0.56009257*1j],
  [0.82843006  + -0.56009257*1j],
  [0.56009257  + -0.82843006*1j],
  [0.56009257  + -0.82843006*1j],
  [0.82843006  + -0.56009257*1j],
  [0.82843006  + -0.56009257*1j],
  [0.56009257  + -0.82843006*1j],
  [0.56009257  + -0.82843006*1j],
  [0.82843006  + -0.56009257*1j],
  [0.82843006  + -0.56009257*1j],
  [0.56009257  + -0.82843006*1j],
  [0.56009257  + -0.82843006*1j],
  [0.82843006  + -0.56009257*1j],
  [0.82843006  + -0.56009257*1j],


])

ax = axes[1]
ax.plot(np.angle(preamble_mine), label='phase')
ax.set_title('Preamble Points in Complex Plane')


plt.tight_layout()
plt.show()
